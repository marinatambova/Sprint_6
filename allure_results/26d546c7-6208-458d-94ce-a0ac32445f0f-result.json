{"name": "test_faq_questions[question_locator0-answer_locator0]", "status": "broken", "statusDetails": {"message": "AttributeError: 'str' object has no attribute 'iter_parents'", "trace": "self = <allure_pytest.listener.AllureListener object at 0x000001DD9371DEB0>, item = <Function test_faq_questions[question_locator0-answer_locator0]>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_runtest_setup(self, item):\n        if not self._cache.get(item.nodeid):\n            uuid = self._cache.push(item.nodeid)\n            test_result = TestResult(name=item.name, uuid=uuid, start=now(), stop=now())\n            self.allure_logger.schedule_test(uuid, test_result)\n    \n        yield\n    \n        uuid = self._cache.get(item.nodeid)\n        test_result = self.allure_logger.get_test(uuid)\n>       for fixturedef in _test_fixtures(item):\n\n.venv\\Lib\\site-packages\\allure_pytest\\listener.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nitem = <Function test_faq_questions[question_locator0-answer_locator0]>\n\n    def _test_fixtures(item):\n        fixturemanager = item.session._fixturemanager\n        fixturedefs = []\n    \n        if hasattr(item, \"_request\") and hasattr(item._request, \"fixturenames\"):\n            for name in item._request.fixturenames:\n>               fixturedefs_pytest = fixturemanager.getfixturedefs(name, item.nodeid)\nE               AttributeError: 'str' object has no attribute 'iter_parents'\n\n.venv\\Lib\\site-packages\\allure_pytest\\listener.py:286: AttributeError"}, "start": 1725374088671, "stop": 1725374088671, "uuid": "9649a6b6-f070-4a27-8e6f-a0f0e2afe871", "labels": [{"name": "story", "value": "FAQ functionality"}, {"name": "feature", "value": "FAQ Section"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_faq"}, {"name": "subSuite", "value": "TestFaq"}, {"name": "host", "value": "SC-WS-01209"}, {"name": "thread", "value": "12820-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_faq"}]}