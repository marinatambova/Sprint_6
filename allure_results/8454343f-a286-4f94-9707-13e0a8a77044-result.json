{"name": "Позитивный сценарий заказа самоката: верхняя кнопка заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"945dc96d-2413-41b0-940f-406845c300d3\")>, name = 'Иван', surname = 'Иванов'\naddress = 'Улица Пушкина, дом Колотушкина', metro = 'Киевская', phone = '+79991112233', date = '20.10.2023', rent_period = 'четверо суток'\n\n    @allure.feature('Order Scooter')\n    @allure.story('User can order a scooter')\n    @allure.title('Позитивный сценарий заказа самоката: верхняя кнопка заказа')\n    @pytest.mark.parametrize(\n        \"name, surname, address, metro, phone, date, rent_period\",\n        [\n            (\"Иван\", \"Иванов\", \"Улица Пушкина, дом Колотушкина\", \"Киевская\", \"+79991112233\", \"20.10.2023\", \"четверо суток\"),\n            (\"Пётр\", \"Петров\", \"Улица Ленина, дом Сталина\", \"Арбатская\", \"+79993334455\", \"21.10.2023\", \"сутки\")\n        ]\n    )\n    def test_order_scooter_top_button(driver, name, surname, address, metro, phone, date, rent_period):\n        driver.get('https://qa-scooter.praktikum-services.ru/')\n        page = OrderPage(driver)\n    \n        page.click_order_button_top()\n        page.fill_order_form(name, surname, address, metro, phone)\n>       page.fill_rent_form(date, rent_period)\n\ntests\\test_order.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\order_page.py:26: in fill_rent_form\n    self.wait.until(EC.visibility_of_element_located(OrderLocators.DATE_FIELD)).send_keys(date)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"945dc96d-2413-41b0-940f-406845c300d3\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000292820A8EA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "fb40f081-d44b-4f57-9f43-f0aa899910d1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "name", "value": "'Иван'"}, {"name": "surname", "value": "'Иванов'"}, {"name": "address", "value": "'Улица Пушкина, дом Колотушкина'"}, {"name": "metro", "value": "'Киевская'"}, {"name": "phone", "value": "'+79991112233'"}, {"name": "date", "value": "'20.10.2023'"}, {"name": "rent_period", "value": "'четверо суток'"}], "start": 1724868456142, "stop": 1724868468103, "uuid": "a0805b56-dd23-48df-b890-d49b2bc6908e", "historyId": "f5351060570757879a0f1bb736b15acb", "testCaseId": "38880894736826b28c9642f024128702", "fullName": "tests.test_order#test_order_scooter_top_button", "labels": [{"name": "feature", "value": "Order Scooter"}, {"name": "story", "value": "User can order a scooter"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order"}, {"name": "host", "value": "SC-WS-01209"}, {"name": "thread", "value": "11252-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}]}